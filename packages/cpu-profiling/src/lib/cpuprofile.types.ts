export interface PositionTickInfo {
  line: number; // 1-based source line number where ticks were recorded
  ticks: number; // Number of samples attributed to this position
}

export interface CallFrame {
  functionName?: string; // JavaScript function name (if available)
  scriptId: string; // V8 script identifier
  url: string; // URL or name of the script (this string will be responsible for coloring. same url's will have the same color)
  lineNumber: number; // 0-based line number in the script
  columnNumber: number; // 0-based column number in the script
}

export interface ProfileNode {
  id: number; // Unique node identifier
  callFrame: CallFrame; // Function location and details
  hitCount?: number; // Number of samples where this node was on top of the stack
  parent?: number; // Parent node ID
  children?: number[]; // Child node IDs
  deoptReason?: string; // Reason for V8 deoptimization (if any)
  positionTicks?: PositionTickInfo[]; // Source position ticks
}

/**
 * Represents the structure of a .cpuprofile file generated by V8.
 */
export interface CPUProfile {
  nodes: ProfileNode[]; // All profile nodes; first entry is the root
  startTime: number; // Profiling start timestamp in microseconds
  endTime: number; // Profiling end timestamp in microseconds
  samples?: number[]; // Array of node IDs sampled in order
  timeDeltas?: number[]; // Microsecond deltas between adjacent samples
}
